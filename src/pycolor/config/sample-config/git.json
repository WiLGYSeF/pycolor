{
    "profiles": [
        {
            "name": "git",
            "arg_patterns": [
                {
                    "subcommand": "blame"
                }
            ],
            "patterns": [
                {
                    "expression": [
                        "^",
                        "([\\^ 0-9a-f]+)",
                        "( .*)?",
                        "\\(",
                            "(.*)",
                            " ((?:[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}|[0-9]+) [+-]?[0-9]{4})",
                            " ([ 0-9]+)",
                        "\\)"
                    ],
                    "replace": "%Cy%G1%Cm%G2%Ce (%Cb%G3%Cz %Cg%G4%Cz %Cm%G5%Ce)%Cz"
                }
            ]
        },
        {
            "name": "git",
            "arg_patterns": [
                {
                    "subcommand": "branch",
                    "optional": true
                },
                {
                    "subcommand": "br",
                    "optional": true
                }
            ],
            "patterns": [
                {
                    "expression": "^Deleted branch (.*) \\(was ([0-9a-f]+)\\).$",
                    "replace_groups": ["%H(bol;c)", "%Hy"]
                },
                {
                    "expression": "^error: .*",
                    "replace_all": "%Cr%G0%Cz"
                }
            ]
        },
        {
            "name": "git",
            "arg_patterns": [
                {
                    "subcommand": "branch",
                    "optional": true
                },
                {
                    "subcommand": "br",
                    "optional": true
                },
                {
                    "expression": [
                        "-[A-Za-z]*a[A-Za-z]*",
                        "|",
                        "--all",
                        "|",
                        "-[A-Za-z]*l[A-Za-z]*",
                        "|",
                        "--list",
                        "|",
                        "-[A-Za-z]*v[A-Za-z]*",
                        "|",
                        "--verbose"
                    ]
                },
                {
                    "expression": "--format.*",
                    "match_not": true
                }
            ],
            "patterns": [
                {
                    "expression": "^[* ] (?P<name>[^ ]+)(?: +(?P<hash>[0-9a-f]+) (?P<msg>.+))?$",
                    "replace_groups": {
                        "hash": "%Hy"
                    }
                },
                {
                    "expression": "^\\* ([^ ]+)",
                    "replace_groups": ["%H(bol;c)"]
                },
                {
                    "expression": "^  (remotes[^ ]+)",
                    "replace_groups": ["%Hr"]
                }
            ]
        },
        {
            "name": "git",
            "arg_patterns": [
                {
                    "subcommand": "checkout",
                    "optional": true
                },
                {
                    "subcommand": "ch",
                    "optional": true
                }
            ],
            "patterns": [
                {
                    "expression": "^(?:Switched to(?: a new| and reset)? branch|Already on) '(.*)'$",
                    "replace_groups": ["%H(bol;c)"]
                },
                {
                    "expression": "Your branch is up to date with '(.+)'\\.",
                    "replace_groups": ["%Hg"]
                },
                {
                    "expression": "^Reset branch '(.+)'$",
                    "replace_groups": ["%H(bol;c)"]
                },
                {
                    "expression": "^error: .*",
                    "replace_all": "%Cr%G0%Cz"
                },
                {
                    "expression": "^Aborting$",
                    "replace_all": "%Cr%G0%Cz"
                }
            ]
        },
        {
            "name": "git",
            "arg_patterns": [
                {
                    "subcommand": "commit",
                    "optional": true
                },
                {
                    "subcommand": "amend",
                    "optional": true
                },
                {
                    "expression": "--interactive|-[A-Za-z]*p[A-Za-z]*|--patch",
                    "match_not": true
                }
            ],
            "from_profiles": [ "git_commit", "git_merge_conflict", "git_status" ]
        },
        {
            "name": "git",
            "arg_patterns": [
                {
                    "subcommand": "commit",
                    "optional": true
                },
                {
                    "subcommand": "amend",
                    "optional": true
                },
                {
                    "expression": "--short"
                }
            ],
            "from_profiles": [ "git_status_concise" ]
        },
        {
            "name": "git",
            "arg_patterns": [
                {
                    "subcommand": "merge"
                }
            ],
            "from_profiles": [ "git_commit", "git_merge_conflict" ]
        },
        {
            "name": "git",
            "arg_patterns": [
                {
                    "subcommand": "push"
                }
            ],
            "tty": true,
            "patterns": [
                {
                    "expression": "^Counting objects: +(\\d+%) \\((\\d+)/(\\d+)\\)",
                    "replace_groups": ["%Hlc", "%Hg", "%Hc"]
                },
                {
                    "expression": "^Compressing objects: +(\\d+%) \\((\\d+)/(\\d+)\\)",
                    "replace_groups": ["%Hlc", "%Hg", "%Hc"]
                },
                {
                    "expression": "^Writing objects: +(\\d+%) \\((\\d+)/(\\d+)\\), ([\\d.]+ .+) \\| ([\\d.]+ [^,]+)",
                    "replace_groups": ["%Hlc", "%Hg", "%Hc", "%Hg", "%Hb"]
                },
                {
                    "expression": "^Total (\\d+) \\(delta \\d+\\), reused (\\d+) \\(delta \\d+\\)",
                    "replace_groups": ["%Hg", "%Hg"]
                },
                {
                    "expression": "^ +([0-9a-f]+)..([0-9a-f]+) +(.*) -> (.*)$",
                    "replace_groups": {
                        "1,2": "%Hy",
                        "3,4": "%H(bol;c)"
                    }
                },
                {
                    "expression": "^ \\* \\[(new branch)\\] +(.*) -> (.*)$",
                    "replace_groups": {
                        "1": "%Hy",
                        "2,3": "%H(bol;c)"
                    }
                },
                {
                    "expression": "^ \\+ +([0-9a-f]+)\\.+([0-9a-f]+) +(.*) -> (.*) (\\(forced update\\))$",
                    "replace_groups": {
                        "1,2": "%Hy",
                        "3,4": "%H(bol;c)",
                        "5": "%H(bol;y)"
                    }
                },
                {
                    "expression": "^ \\- \\[deleted\\] +(.+)$",
                    "replace_groups": ["%Hr"]
                }
            ]
        },
        {
            "name": "git",
            "arg_patterns": [
                {
                    "subcommand": "reset"
                }
            ],
            "patterns": [
                {
                    "expression": "^(.*) is now at ([0-9a-f]+) (.*)$",
                    "replace_all": "%C(bol;c)%G1%Cz is now at %Cy%G2%Cz %G3"
                },
                {
                    "expression": "^M\t(.*)",
                    "replace_groups": ["%Hr"]
                }
            ]
        },
        {
            "name": "git",
            "arg_patterns": [
                {
                    "subcommand": ["stash"],
                    "optional": true
                },
                {
                    "subcommand": ["stash", "push"],
                    "optional": true
                }
            ],
            "patterns": [
                {
                    "expression": "^Saved working directory and index state (?:(.+) on|On) (.+): (?:([0-9a-f]{7}) )?",
                    "replace_groups": ["%Gc", "%H(bol;c)", "%Hy"]
                }
            ]
        },
        {
            "name": "git",
            "arg_patterns": [
                {
                    "subcommand": ["stash", "apply"]
                }
            ],
            "from_profiles": [ "git_merge_conflict", "git_status" ]
        },
        {
            "name": "git",
            "arg_patterns": [
                {
                    "subcommand": ["stash", "drop"]
                }
            ],
            "from_profiles": [ "git_stash_drop" ]
        },
        {
            "name": "git",
            "arg_patterns": [
                {
                    "subcommand": ["stash", "list"]
                }
            ],
            "patterns": [
                {
                    "expression": "^stash@{([0-9]+)}: WIP on (.*): ([0-9a-f]+)",
                    "replace_groups": ["%Hg", "%H(bol;c)", "%Hy"]
                }
            ]
        },
        {
            "name": "git",
            "arg_patterns": [
                {
                    "subcommand": ["stash", "pop"]
                }
            ],
            "from_profiles": [ "git_status", "git_stash_drop" ]
        },
        {
            "name": "git",
            "arg_patterns": [
                {
                    "subcommand": "status",
                    "optional": true
                },
                {
                    "subcommand": "st",
                    "optional": true
                }
            ],
            "from_profiles": [ "git_status", "git_status_concise" ]
        },
        {
            "profile_name": "git_commit",
            "patterns": [
                {
                    "expression": "^On branch (.+)",
                    "replace_groups": ["%C(bol;c)%Gc%Cz"]
                },
                {
                    "expression": "^Your branch is up to date with '(.+)'\\.",
                    "replace_groups": ["%Hg"]
                },
                {
                    "expression": "^\\[(.*) \\((.*)\\) ([0-9a-f]+)\\]",
                    "replace_groups": ["%H(bol;c)", "%Gc", "%Hy"]
                },
                {
                    "expression": "^\\[(.*) ([0-9a-f]+)\\]",
                    "replace_groups": ["%H(bol;c)", "%Hy"]
                },
                {
                    "expression": "^Updating ([0-9a-f]+)..([0-9a-f]+)$",
                    "replace_groups": ["%Hy", "%Hy"]
                },
                {
                    "expression": "^ .*\\| *\\d+ (\\+*)(-*)",
                    "replace_groups": ["%Hg", "%Hr"]
                },
                {
                    "expression": "^ .*\\| *Bin ([0-9]+) -> ([0-9]+) bytes$",
                    "replace_groups": ["%Hr", "%Hg"]
                },
                {
                    "expression": "^ (\\d+) files? changed(?:, (\\d+) insertions?\\(\\+\\))?(?:, (\\d+) deletions?\\(-\\))?",
                    "replace_groups": ["%Hc", "%Hg", "%Hr"]
                },
                {
                    "expression": "^ create mode (\\d+)",
                    "replace_groups": ["%Hlm"]
                },
                {
                    "expression": "^ delete mode (\\d+) (.+)",
                    "replace_groups": ["%Hlm", "%Hr"]
                },
                {
                    "expression": "^Removing (.+)",
                    "replace_groups": ["%Hr"]
                },
                {
                    "expression": "^ rewrite .* \\((\\d+%)\\)",
                    "replace_groups": ["%Hlc"]
                },
                {
                    "expression": "^ mode change (\\d+) (=>) (\\d+)",
                    "replace_groups": {
                        "1,3": "%Hlm",
                        "2": "%Hy"
                    }
                },
                {
                    "expression": "^ copy (.*)({)(.*) (=>) (.*)(})(.*) \\((\\d+%)\\)",
                    "replace_groups": {
                        "2,4,6": "%Hy",
                        "8": "%Hlc"
                    },
                    "skip_others": true
                },
                {
                    "expression": "^ copy (.+) (=>) (.+) \\((\\d+%)\\)",
                    "replace_groups": {
                        "2": "%Hy",
                        "4": "%Hlc"
                    }
                },
                {
                    "expression": "^ rename (.*)({)(.*) (=>) (.*)(})(.*) \\((\\d+%)\\)",
                    "replace_groups": {
                        "2,4,6": "%Hy",
                        "8": "%Hlc"
                    },
                    "skip_others": true
                },
                {
                    "expression": "^ rename (.+) (=>) (.+) \\((\\d+%)\\)",
                    "replace_groups": {
                        "2": "%Hy",
                        "4": "%Hlc"
                    }
                }
            ]
        },
        {
            "profile_name": "git_merge_conflict",
            "patterns": [
                {
                    "expression": "^Auto-merging (.*)$",
                    "replace_all": "Auto-merging %Cy%G1%Cz"
                },
                {
                    "expression": "^(CONFLICT.*:) (.*)$",
                    "replace_groups": ["%H(bol;r)", "%Hr"]
                },
                {
                    "activation_expression": "^error: Your local changes to the following files would be overwritten by merge:$",
                    "deactivation_expression": "^[^\\s]",
                    "expression": "^\\s+(.+)$",
                    "replace_groups": ["%Hr"]
                }
            ]
        },
        {
            "profile_name": "git_stash_drop",
            "patterns": [
                {
                    "expression": "^Dropped refs/stash@{([0-9]+)} \\(([0-9a-f]+)\\)$",
                    "replace_groups": ["%Hg", "%Hy"]
                }
            ]
        },
        {
            "profile_name": "git_status",
            "patterns": [
                {
                    "expression": "^On branch (.*)$",
                    "replace_groups": ["%H(bol;c)"]
                },
                {
                    "activation_expression": "^Changes to be committed:$",
                    "deactivation_expression": "^\\s*$",
                    "expression": [
                        "^\\s+(?:",
                            "(?P<new>new file:\\s+.*)",
                            "|",
                            "(?P<del>deleted:\\s+.*)",
                            "|",
                            "(?P<mod>modified:\\s+.*)",
                            "|",
                            "(?P<ren>renamed:\\s+.*)",
                        ")$"
                    ],
                    "replace_groups": {
                        "new": "%Hlg",
                        "del": "%Hlr",
                        "mod": "%Hg",
                        "ren": "%Hly"
                    }
                },
                {
                    "activation_expression": "^Changes not staged for commit:$",
                    "deactivation_expression": "^\\s*$",
                    "expression": [
                        "^\\s+(?:",
                            "(?P<new>new file:\\s+.*)",
                            "|",
                            "(?P<del>deleted:\\s+.*)",
                            "|",
                            "(?P<mod>modified:\\s+.*)",
                            "|",
                            "(?P<ren>renamed:\\s+.*)",
                        ")$"
                    ],
                    "replace_groups": {
                        "new,del,mod,ren": "%Hr"
                    }
                },
                {
                    "activation_expression": "^Unmerged paths:$",
                    "deactivation_expression": "^\\s*$",
                    "expression": [
                        "^\\s+(?:",
                            "(?P<bmod>both modified:\\s+.*)",
                        ")$"
                    ],
                    "replace_groups": {
                        "bmod": "%Hr"
                    }
                },
                {
                    "activation_expression": "^Untracked files:$",
                    "activation_expression_line_offset": 2,
                    "deactivation_expression": "^\\s*$",
                    "expression": "^\\s+([^(].*)$",
                    "replace_groups": ["%Hr"]
                }
            ]
        },
        {
            "profile_name": "git_status_concise",
            "patterns": [
                {
                    "expression": "^##\\s+(.+)",
                    "replace_groups": ["%H(bol;c)"]
                },
                {
                    "expression": "^ D\\s+(.+)",
                    "replace_groups": ["%Hr"]
                },
                {
                    "expression": "^M \\s+(.+)",
                    "replace_groups": ["%Hg"]
                },
                {
                    "expression": "^MM\\s+(.+)",
                    "replace_groups": ["%Hly"]
                },
                {
                    "expression": "^(?: M|\\?\\?)\\s+(.+)",
                    "replace_groups": ["%Hr"]
                }
            ]
        }
    ]
}
